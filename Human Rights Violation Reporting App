import tkinter as tk
from tkinter import messagebox
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import sqlite3

# Create SQLite database and table if not exists
def create_db():
    conn = sqlite3.connect('human_rights_reports.db')
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS reports
                      (id INTEGER PRIMARY KEY AUTOINCREMENT,
                       name TEXT,
                       email TEXT,
                       report TEXT,
                       timestamp DATETIME DEFAULT CURRENT_TIMESTAMP)''')
    conn.commit()
    conn.close()

# Function to send email to authorities
def send_email(report_data):
    sender_email = "your_email@example.com"
    sender_password = "your_email_password"
    receiver_email = "authorities_email@example.com"
    
    message = MIMEMultipart()
    message['From'] = sender_email
    message['To'] = receiver_email
    message['Subject'] = "Human Rights Violation Report"

    body = f"Report details:\n\nName: {report_data[0]}\nEmail: {report_data[1]}\nReport: {report_data[2]}\nTimestamp: {report_data[3]}"
    message.attach(MIMEText(body, 'plain'))

    try:
        with smtplib.SMTP('smtp.gmail.com', 587) as server:
            server.starttls()
            server.login(sender_email, sender_password)
            text = message.as_string()
            server.sendmail(sender_email, receiver_email, text)
        print("Email sent successfully!")
    except Exception as e:
        print(f"Failed to send email: {e}")

# Function to save report to the database
def save_report(name, email, report):
    conn = sqlite3.connect('human_rights_reports.db')
    cursor = conn.cursor()
    cursor.execute("INSERT INTO reports (name, email, report) VALUES (?, ?, ?)", (name, email, report))
    conn.commit()
    conn.close()

# Function to handle report submission
def submit_report():
    name = entry_name.get()
    email = entry_email.get()
    report = text_report.get("1.0", "end-1c")

    if not name or not email or not report:
        messagebox.showwarning("Input Error", "All fields are required!")
        return

    save_report(name, email, report)
    send_email((name, email, report, "timestamp_placeholder"))

    messagebox.showinfo("Success", "Report submitted successfully!")

# Create the GUI
app = tk.Tk()
app.title("Human Rights Violation Reporting")

label_name = tk.Label(app, text="Name (optional):")
label_name.pack()

entry_name = tk.Entry(app, width=50)
entry_name.pack()

label_email = tk.Label(app, text="Email (optional):")
label_email.pack()

entry_email = tk.Entry(app, width=50)
entry_email.pack()

label_report = tk.Label(app, text="Describe the violation:")
label_report.pack()

text_report = tk.Text(app, width=50, height=10)
text_report.pack()

submit_button = tk.Button(app, text="Submit Report", command=submit_report)
submit_button.pack()

# Initialize database
create_db()

# Run the application
app.mainloop()
