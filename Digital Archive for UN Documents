import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_storage/firebase_storage.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'UN Digital Archive',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: DocumentListScreen(),
    );
  }
}

class DocumentListScreen extends StatefulWidget {
  @override
  _DocumentListScreenState createState() => _DocumentListScreenState();
}

class _DocumentListScreenState extends State<DocumentListScreen> {
  TextEditingController searchController = TextEditingController();

  // Fetch documents from Firestore
  Future<List<Document>> fetchDocuments() async {
    final snapshot = await FirebaseFirestore.instance.collection('un_documents').get();
    return snapshot.docs.map((doc) => Document.fromFirestore(doc)).toList();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('UN Digital Archive'),
        actions: [
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {
              showSearch(
                context: context,
                delegate: DocumentSearchDelegate(),
              );
            },
          ),
        ],
      ),
      body: FutureBuilder<List<Document>>(
        future: fetchDocuments(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return Center(child: CircularProgressIndicator());
          }
          if (snapshot.hasError) {
            return Center(child: Text('Error: ${snapshot.error}'));
          }
          final documents = snapshot.data ?? [];
          return ListView.builder(
            itemCount: documents.length,
            itemBuilder: (context, index) {
              final doc = documents[index];
              return ListTile(
                title: Text(doc.title),
                subtitle: Text(doc.category),
                onTap: () => Navigator.push(
                  context,
                  MaterialPageRoute(builder: (_) => DocumentDetailScreen(document: doc)),
                ),
              );
            },
          );
        },
      ),
    );
  }
}

class DocumentSearchDelegate extends SearchDelegate<Document> {
  @override
  List<Widget> buildActions(BuildContext context) {
    return [
      IconButton(
        icon: Icon(Icons.clear),
        onPressed: () {
          query = '';
        },
      ),
    ];
  }

  @override
  Widget buildLeading(BuildContext context) {
    return IconButton(
      icon: Icon(Icons.arrow_back),
      onPressed: () {
        close(context, Document(title: ''));
      },
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    // You can implement the search results based on user query
    return FutureBuilder<List<Document>>(
      future: FirebaseFirestore.instance.collection('un_documents').where('title', isGreaterThanOrEqualTo: query).get(),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return Center(child: CircularProgressIndicator());
        }
        if (snapshot.hasError) {
          return Center(child: Text('Error: ${snapshot.error}'));
        }
        final documents = snapshot.data!.docs.map((doc) => Document.fromFirestore(doc)).toList();
        return ListView.builder(
          itemCount: documents.length,
          itemBuilder: (context, index) {
            final doc = documents[index];
            return ListTile(
              title: Text(doc.title),
              subtitle: Text(doc.category),
              onTap: () => Navigator.push(
                context,
                MaterialPageRoute(builder: (_) => DocumentDetailScreen(document: doc)),
              ),
            );
          },
        );
      },
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    return Center(
      child: Text('Search for a document by title or category'),
    );
  }
}

class DocumentDetailScreen extends StatelessWidget {
  final Document document;

  DocumentDetailScreen({required this.document});

  Future<String> _getDocumentUrl() async {
    // Get the download URL from Firebase Storage
    Reference ref = FirebaseStorage.instance.ref().child('documents/${document.id}.pdf');
    String url = await ref.getDownloadURL();
    return url;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text(document.title)),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text('Category: ${document.category}', style: TextStyle(fontSize: 18)),
            SizedBox(height: 8),
            Text('Date: ${document.date}', style: TextStyle(fontSize: 18)),
            SizedBox(height: 8),
            Text('Description: ${document.description}', style: TextStyle(fontSize: 16)),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: () async {
                String url = await _getDocumentUrl();
                // Open the document using the URL
                showDialog(
                  context: context,
                  builder: (context) {
                    return AlertDialog(
                      title: Text('Download Document'),
                      content: Text('Do you want to view/download this document?'),
                      actions: [
                        TextButton(
                          onPressed: () {
                            Navigator.pop(context);
                          },
                          child: Text('Cancel'),
                        ),
                        TextButton(
                          onPressed: () {
                            // Redirect to the URL
                            // You could use a PDF viewer plugin for Flutter here
                            Navigator.pop(context);
                          },
                          child: Text('View/Download'),
                        ),
                      ],
                    );
                  },
                );
              },
              child: Text('View/Download Document'),
            ),
          ],
        ),
      ),
    );
  }
}

class Document {
  final String id;
  final String title;
  final String description;
  final String category;
  final String date;

  Document({
    required this.id,
    required this.title,
    required this.description,
    required this.category,
    required this.date,
  });

  factory Document.fromFirestore(DocumentSnapshot doc) {
    return Document(
      id: doc.id,
      title: doc['title'],
      description: doc['description'],
      category: doc['category'],
      date: doc['date'],
    );
  }
}
